server:
  port: 8080

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  application:
    name: ordinainchat

  # Datasource JPA/PostgreSQL (valori di default; possono essere sovrascritti da .env)
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/ordinainchat}
    username: ${SPRING_DATASOURCE_USERNAME:ordinainchat}
    password: ${SPRING_DATASOURCE_PASSWORD:change_me}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
    open-in-view: false
    properties:
      hibernate:
        dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
        jdbc.lob.non_contextual_creation: true
        format_sql: true
    show-sql: false

  flyway:
    enabled: ${SPRING_FLYWAY_ENABLED:true}
    baseline-on-migrate: ${SPRING_FLYWAY_BASELINE_ON_MIGRATE:true}
    # locations: classpath:db/migration   # default, ok cos√¨

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

openapi:
  service:
    title: "OrdinaInChat Rest API"
    version: 1.0.0
    url: ${OPENAPI_URL:http://localhost:8080/v3/api-docs}

telegrambots:
  enabled: true
  webhook-bots:
    - bot-path: ${TELEGRAM_BOT_PATH:/api/telegram/webhook}
      username: ${TELEGRAM_BOT_NAME:OrdinainChatBot}
      token: ${TELEGRAM_BOT_TOKEN}
      secret: ${TELEGRAM_BOT_SECRET:}

telegram:
  webhook:
    url: ${TELEGRAM_WEBHOOK_URL:http://localhost:8080/api/telegram/webhook}
    token: ${TELEGRAM_BOT_TOKEN}

openai:
  api-key: ${OPENAI_API_KEY}
  model: ${OPENAI_MODEL:gpt-5.1-mini}
  temperature: ${OPENAI_TEMPERATURE:0}
  max-tokens: ${OPENAI_MAX_TOKENS:600}
